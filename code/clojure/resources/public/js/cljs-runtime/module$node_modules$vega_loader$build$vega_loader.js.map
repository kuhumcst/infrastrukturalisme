{
"version":3,
"file":"module$node_modules$vega_loader$build$vega_loader.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/vega-loader/build/vega-loader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_loader$build$vega_loader\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-dsv'), require('topojson-client'), require('vega-format')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-dsv', 'topojson-client', 'vega-format'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.d3, global.topojson, global.vega));\n}(this, (function (exports, vegaUtil, d3Dsv, topojsonClient, vegaFormat) { 'use strict';\n\n  // Matches absolute URLs with optional protocol\n  //   https://...    file://...    //...\n  const protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n  // Matches allowed URIs. From https://github.com/cure53/DOMPurify/blob/master/src/regexp.js with added file://\n  const allowed_re = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp|file|data):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i; // eslint-disable-line no-useless-escape\n  const whitespace_re = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\n\n\n  // Special treatment in node.js for the file: protocol\n  const fileProtocol = 'file://';\n\n  /**\n   * Factory for a loader constructor that provides methods for requesting\n   * files from either the network or disk, and for sanitizing request URIs.\n   * @param {function} fetch - The Fetch API for HTTP network requests.\n   *   If null or undefined, HTTP loading will be disabled.\n   * @param {object} fs - The file system interface for file loading.\n   *   If null or undefined, local file loading will be disabled.\n   * @return {function} A loader constructor with the following signature:\n   *   param {object} [options] - Optional default loading options to use.\n   *   return {object} - A new loader instance.\n   */\n  function loaderFactory(fetch, fs) {\n    return options => ({\n      options: options || {},\n      sanitize: sanitize,\n      load: load,\n      fileAccess: !!fs,\n      file: fileLoader(fs),\n      http: httpLoader(fetch)\n    });\n  }\n\n  /**\n   * Load an external resource, typically either from the web or from the local\n   * filesystem. This function uses {@link sanitize} to first sanitize the uri,\n   * then calls either {@link http} (for web requests) or {@link file} (for\n   * filesystem loading).\n   * @param {string} uri - The resource indicator (e.g., URL or filename).\n   * @param {object} [options] - Optional loading options. These options will\n   *   override any existing default options.\n   * @return {Promise} - A promise that resolves to the loaded content.\n   */\n  async function load(uri, options) {\n    const opt = await this.sanitize(uri, options),\n          url = opt.href;\n\n    return opt.localFile\n      ? this.file(url)\n      : this.http(url, options);\n  }\n\n  /**\n   * URI sanitizer function.\n   * @param {string} uri - The uri (url or filename) to sanity check.\n   * @param {object} options - An options hash.\n   * @return {Promise} - A promise that resolves to an object containing\n   *  sanitized uri data, or rejects it the input uri is deemed invalid.\n   *  The properties of the resolved object are assumed to be\n   *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be\n   *  provided by the 'href' property of the returned object.\n   */\n  async function sanitize(uri, options) {\n    options = vegaUtil.extend({}, this.options, options);\n\n    const fileAccess = this.fileAccess,\n          result = {href: null};\n\n    let isFile, loadFile, base;\n\n    const isAllowed = allowed_re.test(uri.replace(whitespace_re, ''));\n\n    if (uri == null || typeof uri !== 'string' || !isAllowed) {\n      vegaUtil.error('Sanitize failure, invalid URI: ' + vegaUtil.stringValue(uri));\n    }\n\n    const hasProtocol = protocol_re.test(uri);\n\n    // if relative url (no protocol/host), prepend baseURL\n    if ((base = options.baseURL) && !hasProtocol) {\n      // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n      if (!uri.startsWith('/') && base[base.length-1] !== '/') {\n        uri = '/' + uri;\n      }\n      uri = base + uri;\n    }\n\n    // should we load from file system?\n    loadFile = (isFile = uri.startsWith(fileProtocol))\n      || options.mode === 'file'\n      || options.mode !== 'http' && !hasProtocol && fileAccess;\n\n    if (isFile) {\n      // strip file protocol\n      uri = uri.slice(fileProtocol.length);\n    } else if (uri.startsWith('//')) {\n      if (options.defaultProtocol === 'file') {\n        // if is file, strip protocol and set loadFile flag\n        uri = uri.slice(2);\n        loadFile = true;\n      } else {\n        // if relative protocol (starts with '//'), prepend default protocol\n        uri = (options.defaultProtocol || 'http') + ':' + uri;\n      }\n    }\n\n    // set non-enumerable mode flag to indicate local file load\n    Object.defineProperty(result, 'localFile', {value: !!loadFile});\n\n    // set uri\n    result.href = uri;\n\n    // set default result target, if specified\n    if (options.target) {\n      result.target = options.target + '';\n    }\n\n    // set default result rel, if specified (#1542)\n    if (options.rel) {\n      result.rel = options.rel + '';\n    }\n\n    // provide control over cross-origin image handling (#2238)\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n    if (options.context === 'image' && options.crossOrigin) {\n      result.crossOrigin = options.crossOrigin + '';\n    }\n\n    // return\n    return result;\n  }\n\n  /**\n   * File system loader factory.\n   * @param {object} fs - The file system interface.\n   * @return {function} - A file loader with the following signature:\n   *   param {string} filename - The file system path to load.\n   *   param {string} filename - The file system path to load.\n   *   return {Promise} A promise that resolves to the file contents.\n   */\n  function fileLoader(fs) {\n    return fs\n      ? filename => new Promise((accept, reject) => {\n          fs.readFile(filename, (error, data) => {\n            if (error) reject(error);\n            else accept(data);\n          });\n        })\n      : fileReject;\n  }\n\n  /**\n   * Default file system loader that simply rejects.\n   */\n  async function fileReject() {\n    vegaUtil.error('No file system access.');\n  }\n\n  /**\n   * HTTP request handler factory.\n   * @param {function} fetch - The Fetch API method.\n   * @return {function} - An http loader with the following signature:\n   *   param {string} url - The url to request.\n   *   param {object} options - An options hash.\n   *   return {Promise} - A promise that resolves to the file contents.\n   */\n  function httpLoader(fetch) {\n    return fetch\n      ? async function(url, options) {\n          const opt = vegaUtil.extend({}, this.options.http, options),\n                type = options && options.response,\n                response = await fetch(url, opt);\n\n          return !response.ok\n            ? vegaUtil.error(response.status + '' + response.statusText)\n            : vegaUtil.isFunction(response[type]) ? response[type]()\n            : response.text();\n        }\n      : httpReject;\n  }\n\n  /**\n   * Default http request handler that simply rejects.\n   */\n  async function httpReject() {\n    vegaUtil.error('No HTTP fetch method available.');\n  }\n\n  const isValid = _ => _ != null && _ === _;\n\n  const isBoolean = _ => _ === 'true'\n    || _ === 'false'\n    || _ === true\n    || _ === false;\n\n  const isDate = _ => !Number.isNaN(Date.parse(_));\n\n  const isNumber = _ => !Number.isNaN(+_) && !(_ instanceof Date);\n\n  const isInteger = _ => isNumber(_) && Number.isInteger(+_);\n\n  const typeParsers = {\n    boolean: vegaUtil.toBoolean,\n    integer: vegaUtil.toNumber,\n    number:  vegaUtil.toNumber,\n    date:    vegaUtil.toDate,\n    string:  vegaUtil.toString,\n    unknown: vegaUtil.identity\n  };\n\n  const typeTests = [\n    isBoolean,\n    isInteger,\n    isNumber,\n    isDate\n  ];\n\n  const typeList = [\n    'boolean',\n    'integer',\n    'number',\n    'date'\n  ];\n\n  function inferType(values, field) {\n    if (!values || !values.length) return 'unknown';\n\n    const n = values.length,\n          m = typeTests.length,\n          a = typeTests.map((_, i) => i + 1);\n\n    for (let i = 0, t = 0, j, value; i < n; ++i) {\n      value = field ? values[i][field] : values[i];\n      for (j = 0; j < m; ++j) {\n        if (a[j] && isValid(value) && !typeTests[j](value)) {\n          a[j] = 0;\n          ++t;\n          if (t === typeTests.length) return 'string';\n        }\n      }\n    }\n\n    return typeList[\n      a.reduce((u, v) => u === 0 ? v : u, 0) - 1\n    ];\n  }\n\n  function inferTypes(data, fields) {\n    return fields.reduce((types, field) => {\n      types[field] = inferType(data, field);\n      return types;\n    }, {});\n  }\n\n  function delimitedFormat(delimiter) {\n    const parse = function(data, format) {\n      const delim = {delimiter: delimiter};\n      return dsv(data, format ? vegaUtil.extend(format, delim) : delim);\n    };\n\n    parse.responseType = 'text';\n\n    return parse;\n  }\n\n  function dsv(data, format) {\n    if (format.header) {\n      data = format.header\n        .map(vegaUtil.stringValue)\n        .join(format.delimiter) + '\\n' + data;\n    }\n    return d3Dsv.dsvFormat(format.delimiter).parse(data + '');\n  }\n\n  dsv.responseType = 'text';\n\n  function isBuffer(_) {\n    return (typeof Buffer === 'function' && vegaUtil.isFunction(Buffer.isBuffer))\n      ? Buffer.isBuffer(_) : false;\n  }\n\n  function json(data, format) {\n    const prop = (format && format.property) ? vegaUtil.field(format.property) : vegaUtil.identity;\n    return vegaUtil.isObject(data) && !isBuffer(data)\n      ? parseJSON(prop(data))\n      : prop(JSON.parse(data));\n  }\n\n  json.responseType = 'json';\n\n  function parseJSON(data, format) {\n    return (format && format.copy)\n      ? JSON.parse(JSON.stringify(data))\n      : data;\n  }\n\n  const filters = {\n    interior: (a, b) => a !== b,\n    exterior: (a, b) => a === b\n  };\n\n  function topojson(data, format) {\n    let method, object, property, filter;\n    data = json(data, format);\n\n    if (format && format.feature) {\n      method = topojsonClient.feature;\n      property = format.feature;\n    } else if (format && format.mesh) {\n      method = topojsonClient.mesh;\n      property = format.mesh;\n      filter = filters[format.filter];\n    } else {\n      vegaUtil.error('Missing TopoJSON feature or mesh parameter.');\n    }\n\n    object = (object = data.objects[property])\n      ? method(data, object, filter)\n      : vegaUtil.error('Invalid TopoJSON object: ' + property);\n\n    return object && object.features || [object];\n  }\n\n  topojson.responseType = 'json';\n\n  const format = {\n    dsv: dsv,\n    csv: delimitedFormat(','),\n    tsv: delimitedFormat('\\t'),\n    json: json,\n    topojson: topojson\n  };\n\n  function formats(name, reader) {\n    if (arguments.length > 1) {\n      format[name] = reader;\n      return this;\n    } else {\n      return vegaUtil.hasOwnProperty(format, name) ? format[name] : null;\n    }\n  }\n\n  function responseType(type) {\n    const f = formats(type);\n    return f && f.responseType || 'text';\n  }\n\n  function read(data, schema, timeParser, utcParser) {\n    schema = schema || {};\n\n    const reader = formats(schema.type || 'json');\n    if (!reader) vegaUtil.error('Unknown data format type: ' + schema.type);\n\n    data = reader(data, schema);\n    if (schema.parse) parse(data, schema.parse, timeParser, utcParser);\n\n    if (vegaUtil.hasOwnProperty(data, 'columns')) delete data.columns;\n    return data;\n  }\n\n  function parse(data, types, timeParser, utcParser) {\n    if (!data.length) return; // early exit for empty data\n\n    const locale = vegaFormat.timeFormatDefaultLocale();\n    timeParser = timeParser || locale.timeParse;\n    utcParser = utcParser || locale.utcParse;\n\n    let fields = data.columns || Object.keys(data[0]),\n        datum, field, i, j, n, m;\n\n    if (types === 'auto') types = inferTypes(data, fields);\n\n    fields = Object.keys(types);\n    const parsers = fields.map(field => {\n      const type = types[field];\n      let parts, pattern;\n\n      if (type && (type.startsWith('date:') || type.startsWith('utc:'))) {\n        parts = type.split(/:(.+)?/, 2);  // split on first :\n        pattern = parts[1];\n\n        if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n            (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n          pattern = pattern.slice(1, -1);\n        }\n\n        const parse = parts[0] === 'utc' ? utcParser : timeParser;\n        return parse(pattern);\n      }\n\n      if (!typeParsers[type]) {\n        throw Error('Illegal format pattern: ' + field + ':' + type);\n      }\n\n      return typeParsers[type];\n    });\n\n    for (i=0, n=data.length, m=fields.length; i<n; ++i) {\n      datum = data[i];\n      for (j=0; j<m; ++j) {\n        field = fields[j];\n        datum[field] = parsers[j](datum[field]);\n      }\n    }\n  }\n\n  var loader = loaderFactory(\n    typeof fetch !== 'undefined' && fetch, // use built-in fetch API\n    null // no file system access\n  );\n\n  exports.format = format;\n  exports.formats = formats;\n  exports.inferType = inferType;\n  exports.inferTypes = inferTypes;\n  exports.loader = loader;\n  exports.read = read;\n  exports.responseType = responseType;\n  exports.typeParsers = typeParsers;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","factory","define","amd","globalThis","self","vega","d3","topojson","vegaUtil","d3Dsv","topojsonClient","vegaFormat","load","uri","options","opt","sanitize","url","href","localFile","file","http","extend","fileAccess","result","isAllowed","allowed_re","test","replace","whitespace_re","error","stringValue","hasProtocol","protocol_re","base","baseURL","startsWith","length","loadFile","isFile","fileProtocol","mode","slice","defaultProtocol","Object","defineProperty","value","target","rel","context","crossOrigin","fileLoader","fs","filename","Promise","accept","reject","readFile","data","fileReject","httpLoader","fetch","type","response","ok","isFunction","text","status","statusText","httpReject","inferType","values","field","n","m","typeTests","a","map","_","i","t","j","typeList","reduce","u","v","inferTypes","fields","types","delimitedFormat","delimiter","parse","format","delim","dsv","responseType","header","join","dsvFormat","json","prop","property","identity","isBuffer","method","object","filter","feature","mesh","filters","objects","features","formats","name","reader","arguments","hasOwnProperty","timeParser","utcParser","locale","timeFormatDefaultLocale","timeParse","utcParse","columns","keys","parsers","parts","split","pattern","typeParsers","Error","datum","isNumber","Number","isNaN","Date","boolean","toBoolean","integer","toNumber","number","date","toDate","string","toString","unknown","isBoolean","isInteger","isDate","interior","b","exterior","csv","tsv","loader","loaderFactory","read","schema","f"]
}
